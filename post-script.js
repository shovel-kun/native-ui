/**
 * @file This script is auto-generated by create-nitro-module and should not be edited.
 *
 * @description This script applies a workaround for Android by modifying the '<ModuleName>OnLoad.cpp' file.
 * It reads the file content and removes the 'margelo/nitro/' string from it. This enables support for custom package names.
 *
 * @module create-nitro-module
 */
const path = require('node:path')
const { writeFile, readFile } = require('node:fs/promises')

const androidWorkaround = async () => {
  const androidOnLoadFile = path.join(
    process.cwd(),
    'nitrogen/generated/android',
    'NativeUiOnLoad.cpp'
  )

  const textInputViewManagerFile = path.join(
    process.cwd(),
    'nitrogen/generated/android/kotlin/com/margelo/nitro/nativeui/views',
    'HybridTextInputManager.kt'
  )

  const dropdownMenuViewManagerFile = path.join(
    process.cwd(),
    'nitrogen/generated/android/kotlin/com/margelo/nitro/nativeui/views',
    'HybridDropdownMenuManager.kt'
  )

  const viewManagerStr = await readFile(textInputViewManagerFile, {
    encoding: 'utf8',
  })
  await writeFile(
    textInputViewManagerFile,
    viewManagerStr.replace(
      /com\.margelo\.nitro\.nativeui\.\*/g,
      'com.nativeui.*'
    )
  )

  // dropdown menu
  const dropdownMenuViewManagerStr = await readFile(
    dropdownMenuViewManagerFile,
    { encoding: 'utf8' }
  )
  await writeFile(
    dropdownMenuViewManagerFile,
    dropdownMenuViewManagerStr.replace(
      /com\.margelo\.nitro\.nativeui\.\*/g,
      'com.nativeui.*'
    )
  )

  const str = await readFile(androidOnLoadFile, { encoding: 'utf8' })
  await writeFile(androidOnLoadFile, str.replace(/margelo\/nitro\//g, ''))
}
androidWorkaround()

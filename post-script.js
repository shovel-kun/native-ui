/**
 * @file This script is auto-generated by create-nitro-module and should not be edited.
 *
 * @description This script applies a workaround for Android by modifying the '<ModuleName>OnLoad.cpp' file.
 * It reads the file content and removes the 'margelo/nitro/' string from it. This enables support for custom package names.
 *
 * @module create-nitro-module
 */
const path = require('node:path')
const { writeFile, readFile } = require('node:fs/promises')

const androidWorkaround = async () => {
  const nitroConfigPath = path.join(process.cwd(), 'nitro.json')
  const nitroConfig = JSON.parse(
    await readFile(nitroConfigPath, { encoding: 'utf8' })
  )

  const androidOnLoadFile = path.join(
    process.cwd(),
    'nitrogen/generated/android',
    'NativeUiOnLoad.cpp'
  )

  // Process views that have kotlin autolinking
  for (const [viewName, viewConfig] of Object.entries(
    nitroConfig.autolinking
  )) {
    if ('kotlin' in viewConfig) {
      const viewManagerFile = path.join(
        process.cwd(),
        'nitrogen/generated/android/kotlin/com/margelo/nitro/nativeui/views',
        `Hybrid${viewName}Manager.kt`
      )

      try {
        const viewManagerStr = await readFile(viewManagerFile, {
          encoding: 'utf8',
        })
        await writeFile(
          viewManagerFile,
          viewManagerStr.replace(
            /com\.margelo\.nitro\.nativeui\.\*/g,
            'com.nativeui.*'
          )
        )
      } catch (err) {
        console.warn(
          `Could not process view manager for ${viewName}:`,
          err.message
        )
      }
    }
  }

  // Process the main CPP file
  const str = await readFile(androidOnLoadFile, { encoding: 'utf8' })
  await writeFile(androidOnLoadFile, str.replace(/margelo\/nitro\//g, ''))
}

androidWorkaround()

///
/// HybridNitroTextSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroTextSpec``
public protocol HybridNitroTextSpec_protocol: HybridObject, HybridView {
  // Properties
  var text: String? { get set }

  // Methods
  
}

/// See ``HybridNitroTextSpec``
public class HybridNitroTextSpec_base {
  private weak var cxxWrapper: HybridNitroTextSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroTextSpec_cxx {
  #if DEBUG
    guard self is HybridNitroTextSpec else {
      fatalError("`self` is not a `HybridNitroTextSpec`! Did you accidentally inherit from `HybridNitroTextSpec_base` instead of `HybridNitroTextSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroTextSpec_cxx(self as! HybridNitroTextSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroText HybridObject.
 * Implement this protocol to create Swift-based instances of NitroText.
 * ```swift
 * class HybridNitroText : HybridNitroTextSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroTextSpec = HybridNitroTextSpec_protocol & HybridNitroTextSpec_base

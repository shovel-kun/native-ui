///
/// HybridTextSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridTextSpec``
public protocol HybridTextSpec_protocol: HybridObject, HybridView {
  // Properties
  var text: String { get set }

  // Methods
  
}

/// See ``HybridTextSpec``
public class HybridTextSpec_base {
  private weak var cxxWrapper: HybridTextSpec_cxx? = nil
  public func getCxxWrapper() -> HybridTextSpec_cxx {
  #if DEBUG
    guard self is HybridTextSpec else {
      fatalError("`self` is not a `HybridTextSpec`! Did you accidentally inherit from `HybridTextSpec_base` instead of `HybridTextSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridTextSpec_cxx(self as! HybridTextSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the Text HybridObject.
 * Implement this protocol to create Swift-based instances of Text.
 * ```swift
 * class HybridText : HybridTextSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridTextSpec = HybridTextSpec_protocol & HybridTextSpec_base

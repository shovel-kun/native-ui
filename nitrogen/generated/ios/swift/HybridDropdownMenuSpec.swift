///
/// HybridDropdownMenuSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridDropdownMenuSpec``
public protocol HybridDropdownMenuSpec_protocol: HybridObject, HybridView {
  // Properties
  var label: String? { get set }
  var selectedIndex: Double? { get set }
  var onOptionSelected: ((_ index: Double) -> Void)? { get set }
  var options: [String] { get set }

  // Methods
  
}

/// See ``HybridDropdownMenuSpec``
public class HybridDropdownMenuSpec_base {
  private weak var cxxWrapper: HybridDropdownMenuSpec_cxx? = nil
  public func getCxxWrapper() -> HybridDropdownMenuSpec_cxx {
  #if DEBUG
    guard self is HybridDropdownMenuSpec else {
      fatalError("`self` is not a `HybridDropdownMenuSpec`! Did you accidentally inherit from `HybridDropdownMenuSpec_base` instead of `HybridDropdownMenuSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridDropdownMenuSpec_cxx(self as! HybridDropdownMenuSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the DropdownMenu HybridObject.
 * Implement this protocol to create Swift-based instances of DropdownMenu.
 * ```swift
 * class HybridDropdownMenu : HybridDropdownMenuSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridDropdownMenuSpec = HybridDropdownMenuSpec_protocol & HybridDropdownMenuSpec_base

///
/// HybridTextInputSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridTextInputSpec``
public protocol HybridTextInputSpec_protocol: HybridObject, HybridView {
  // Properties
  var label: String? { get set }

  // Methods
  
}

/// See ``HybridTextInputSpec``
public class HybridTextInputSpec_base {
  private weak var cxxWrapper: HybridTextInputSpec_cxx? = nil
  public func getCxxWrapper() -> HybridTextInputSpec_cxx {
  #if DEBUG
    guard self is HybridTextInputSpec else {
      fatalError("`self` is not a `HybridTextInputSpec`! Did you accidentally inherit from `HybridTextInputSpec_base` instead of `HybridTextInputSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridTextInputSpec_cxx(self as! HybridTextInputSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the TextInput HybridObject.
 * Implement this protocol to create Swift-based instances of TextInput.
 * ```swift
 * class HybridTextInput : HybridTextInputSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridTextInputSpec = HybridTextInputSpec_protocol & HybridTextInputSpec_base

///
/// HybridBottomSheetSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridBottomSheetSpec``
public protocol HybridBottomSheetSpec_protocol: HybridObject, HybridView {
  // Properties
  

  // Methods
  
}

/// See ``HybridBottomSheetSpec``
public class HybridBottomSheetSpec_base {
  private weak var cxxWrapper: HybridBottomSheetSpec_cxx? = nil
  public func getCxxWrapper() -> HybridBottomSheetSpec_cxx {
  #if DEBUG
    guard self is HybridBottomSheetSpec else {
      fatalError("`self` is not a `HybridBottomSheetSpec`! Did you accidentally inherit from `HybridBottomSheetSpec_base` instead of `HybridBottomSheetSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridBottomSheetSpec_cxx(self as! HybridBottomSheetSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the BottomSheet HybridObject.
 * Implement this protocol to create Swift-based instances of BottomSheet.
 * ```swift
 * class HybridBottomSheet : HybridBottomSheetSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridBottomSheetSpec = HybridBottomSheetSpec_protocol & HybridBottomSheetSpec_base

///
/// HybridTriStateCheckboxSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridTriStateCheckboxSpec.hpp"

// Forward declaration of `HybridTriStateCheckboxSpec_cxx` to properly resolve imports.
namespace NativeUi { class HybridTriStateCheckboxSpec_cxx; }

// Forward declaration of `TriStateCheckboxState` to properly resolve imports.
namespace margelo::nitro::nativeui { enum class TriStateCheckboxState; }

#include "TriStateCheckboxState.hpp"
#include <optional>
#include <functional>

#include "NativeUi-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::nativeui {

  /**
   * The C++ part of HybridTriStateCheckboxSpec_cxx.swift.
   *
   * HybridTriStateCheckboxSpecSwift (C++) accesses HybridTriStateCheckboxSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridTriStateCheckboxSpec_cxx can directly inherit from the C++ class HybridTriStateCheckboxSpec
   * to simplify the whole structure and memory management.
   */
  class HybridTriStateCheckboxSpecSwift: public virtual HybridTriStateCheckboxSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridTriStateCheckboxSpecSwift(const NativeUi::HybridTriStateCheckboxSpec_cxx& swiftPart):
      HybridObject(HybridTriStateCheckboxSpec::TAG),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline NativeUi::HybridTriStateCheckboxSpec_cxx& getSwiftPart() noexcept {
      return _swiftPart;
    }

  public:
    // Get memory pressure
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }

  public:
    // Properties
    inline TriStateCheckboxState getState() noexcept override {
      auto __result = _swiftPart.getState();
      return static_cast<TriStateCheckboxState>(__result);
    }
    inline void setState(TriStateCheckboxState state) noexcept override {
      _swiftPart.setState(static_cast<int>(state));
    }
    inline std::optional<bool> getDisabled() noexcept override {
      auto __result = _swiftPart.getDisabled();
      return __result;
    }
    inline void setDisabled(std::optional<bool> disabled) noexcept override {
      _swiftPart.setDisabled(disabled);
    }
    inline std::optional<std::function<void()>> getOnPress() noexcept override {
      auto __result = _swiftPart.getOnPress();
      return __result;
    }
    inline void setOnPress(const std::optional<std::function<void()>>& onPress) noexcept override {
      _swiftPart.setOnPress(onPress);
    }

  public:
    // Methods
    

  private:
    NativeUi::HybridTriStateCheckboxSpec_cxx _swiftPart;
  };

} // namespace margelo::nitro::nativeui

///
/// JHybridDropdownMenuStateUpdater.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridDropdownMenuStateUpdater.hpp"
#include "views/HybridDropdownMenuComponent.hpp"
#include <NitroModules/NitroDefines.hpp>
#include <NitroModules/JNISharedPtr.hpp>

namespace margelo::nitro::nativeui::views {

using namespace facebook;
using ConcreteStateData = react::ConcreteState<HybridDropdownMenuState>;

void JHybridDropdownMenuStateUpdater::updateViewProps(jni::alias_ref<jni::JClass> /* class */,
                                           jni::alias_ref<JHybridDropdownMenuSpec::javaobject> javaView,
                                           jni::alias_ref<react::StateWrapperImpl::javaobject> stateWrapper) {
  JHybridDropdownMenuSpec* view = javaView->cthis();
  std::shared_ptr<const react::State> state = stateWrapper->cthis()->getState();
  auto concreteState = std::dynamic_pointer_cast<const ConcreteStateData>(state);
  const HybridDropdownMenuState& data = concreteState->getData();
  const std::optional<HybridDropdownMenuProps>& maybeProps = data.getProps();
  if (!maybeProps.has_value()) {
    // Props aren't set yet!
    throw std::runtime_error("HybridDropdownMenuState's data doesn't contain any props!");
  }
  const HybridDropdownMenuProps& props = maybeProps.value();
  if (props.label.isDirty) {
    view->setLabel(props.label.value);
    // TODO: Set isDirty = false
  }
  if (props.selectedIndex.isDirty) {
    view->setSelectedIndex(props.selectedIndex.value);
    // TODO: Set isDirty = false
  }
  if (props.onOptionSelected.isDirty) {
    view->setOnOptionSelected(props.onOptionSelected.value);
    // TODO: Set isDirty = false
  }
  if (props.options.isDirty) {
    view->setOptions(props.options.value);
    // TODO: Set isDirty = false
  }

  // Update hybridRef if it changed
  if (props.hybridRef.isDirty) {
    // hybridRef changed - call it with new this
    const auto& maybeFunc = props.hybridRef.value;
    if (maybeFunc.has_value()) {
      auto shared = JNISharedPtr::make_shared_from_jni<JHybridDropdownMenuSpec>(jni::make_global(javaView));
      maybeFunc.value()(shared);
    }
    // TODO: Set isDirty = false
  }
}

} // namespace margelo::nitro::nativeui::views

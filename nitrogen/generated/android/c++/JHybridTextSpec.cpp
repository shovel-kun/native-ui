///
/// JHybridTextSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridTextSpec.hpp"



#include <string>

namespace margelo::nitro::nativeui {

  jni::local_ref<JHybridTextSpec::jhybriddata> JHybridTextSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridTextSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridTextSpec::initHybrid),
    });
  }

  size_t JHybridTextSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  std::string JHybridTextSpec::getText() {
    static const auto method = javaClassStatic()->getMethod<jni::local_ref<jni::JString>()>("getText");
    auto __result = method(_javaPart);
    return __result->toStdString();
  }
  void JHybridTextSpec::setText(const std::string& text) {
    static const auto method = javaClassStatic()->getMethod<void(jni::alias_ref<jni::JString> /* text */)>("setText");
    method(_javaPart, jni::make_jstring(text));
  }

  // Methods
  

} // namespace margelo::nitro::nativeui

///
/// JHybridNativeUiSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridNativeUiSpec.hpp"





namespace margelo::nitro::nativeui {

  jni::local_ref<JHybridNativeUiSpec::jhybriddata> JHybridNativeUiSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridNativeUiSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridNativeUiSpec::initHybrid),
    });
  }

  size_t JHybridNativeUiSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  bool JHybridNativeUiSpec::getIsRed() {
    static const auto method = javaClassStatic()->getMethod<jboolean()>("isRed");
    auto __result = method(_javaPart);
    return static_cast<bool>(__result);
  }
  void JHybridNativeUiSpec::setIsRed(bool isRed) {
    static const auto method = javaClassStatic()->getMethod<void(jboolean /* isRed */)>("setRed");
    method(_javaPart, isRed);
  }

  // Methods
  

} // namespace margelo::nitro::nativeui

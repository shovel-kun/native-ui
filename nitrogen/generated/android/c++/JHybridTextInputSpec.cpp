///
/// JHybridTextInputSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridTextInputSpec.hpp"





namespace margelo::nitro::nativeui {

  jni::local_ref<JHybridTextInputSpec::jhybriddata> JHybridTextInputSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridTextInputSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridTextInputSpec::initHybrid),
    });
  }

  size_t JHybridTextInputSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  bool JHybridTextInputSpec::getIsRed() {
    static const auto method = javaClassStatic()->getMethod<jboolean()>("isRed");
    auto __result = method(_javaPart);
    return static_cast<bool>(__result);
  }
  void JHybridTextInputSpec::setIsRed(bool isRed) {
    static const auto method = javaClassStatic()->getMethod<void(jboolean /* isRed */)>("setRed");
    method(_javaPart, isRed);
  }

  // Methods
  

} // namespace margelo::nitro::nativeui

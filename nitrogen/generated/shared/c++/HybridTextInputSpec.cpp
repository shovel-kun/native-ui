///
/// HybridTextInputSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridTextInputSpec.hpp"

namespace margelo::nitro::nativeui {

  void HybridTextInputSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("defaultValue", &HybridTextInputSpec::getDefaultValue);
      prototype.registerHybridSetter("defaultValue", &HybridTextInputSpec::setDefaultValue);
      prototype.registerHybridGetter("onChangeText", &HybridTextInputSpec::getOnChangeText);
      prototype.registerHybridSetter("onChangeText", &HybridTextInputSpec::setOnChangeText);
      prototype.registerHybridGetter("multiline", &HybridTextInputSpec::getMultiline);
      prototype.registerHybridSetter("multiline", &HybridTextInputSpec::setMultiline);
      prototype.registerHybridGetter("numberOfLines", &HybridTextInputSpec::getNumberOfLines);
      prototype.registerHybridSetter("numberOfLines", &HybridTextInputSpec::setNumberOfLines);
      prototype.registerHybridGetter("keyboardType", &HybridTextInputSpec::getKeyboardType);
      prototype.registerHybridSetter("keyboardType", &HybridTextInputSpec::setKeyboardType);
      prototype.registerHybridGetter("autocorrection", &HybridTextInputSpec::getAutocorrection);
      prototype.registerHybridSetter("autocorrection", &HybridTextInputSpec::setAutocorrection);
      prototype.registerHybridGetter("variant", &HybridTextInputSpec::getVariant);
      prototype.registerHybridSetter("variant", &HybridTextInputSpec::setVariant);
      prototype.registerHybridGetter("placeholder", &HybridTextInputSpec::getPlaceholder);
      prototype.registerHybridSetter("placeholder", &HybridTextInputSpec::setPlaceholder);
      prototype.registerHybridGetter("label", &HybridTextInputSpec::getLabel);
      prototype.registerHybridSetter("label", &HybridTextInputSpec::setLabel);
    });
  }

} // namespace margelo::nitro::nativeui
